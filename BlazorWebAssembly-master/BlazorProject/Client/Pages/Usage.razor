@page "/data"

@using BlazorProject.Shared

<JobsContainer Jobs="Jobs" OnStatusUpdated="HandleStatusUpdated">
    <JobList ListStatus="JobStatuses.Todo" AllowedStatuses="@(new JobStatuses[] { JobStatuses.Started})" />
    <JobList ListStatus="JobStatuses.Started" AllowedStatuses="@(new JobStatuses[] { JobStatuses.Todo})" />
    <JobList ListStatus="JobStatuses.Completed" AllowedStatuses="@(new JobStatuses[] { JobStatuses.Started })" />
</JobsContainer>
 
<hr />
    <p>Last Update Job <strong>@lastUpdatedJob</strong></p>
<hr />

@foreach(var task in Jobs)
{
    <p>@task.Description - <strong>@task.Status</strong></p>
}

@code {
    List<JobModel> Jobs = new List<JobModel>();
    string lastUpdatedJob = "";

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 5; i++)
        {
            Jobs.Add(new JobModel
            {
                Id = i,
                Description = "Job " + i,
                Status = JobStatuses.Todo,
                LastUpdated = DateTime.Now
            });
        }
    }

    void HandleStatusUpdated(JobModel updatedJob)
    {
         lastUpdatedJob = updatedJob.Description;

        Console.WriteLine();
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    try
    //    {
    //        Jobs.Add(new JobModel { Id = 1, Description = "Mow the lawn", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //        Jobs.Add(new JobModel { Id = 2, Description = "Go to the gym", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //        Jobs.Add(new JobModel { Id = 3, Description = "Call Ollie", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //        Jobs.Add(new JobModel { Id = 4, Description = "Fix bike tyre", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //        Jobs.Add(new JobModel { Id = 5, Description = "Finish blog post", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //    } catch (Exception ex)
    //    {
    //        Console.WriteLine(ex.Message);
    //    }
    //}

    //void HandleStatusUpdated(JobModel updatedJob)
    //{
    //    Console.WriteLine(updatedJob.Description);
    //}
}
